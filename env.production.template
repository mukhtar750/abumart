# ===========================================
# ABUMART PRODUCTION ENVIRONMENT CONFIG
# ===========================================
# Copy this file to .env and fill in your actual values
# This file is optimized for Render hosting

# ===========================================
# LARAVEL APPLICATION SETTINGS
# ===========================================
APP_NAME="AbuMart"
APP_ENV=production
APP_KEY=base64:6e3B1qPCQGxOKnkYbb+94LBZm4YNJejjH+hTIHDHLVE=
APP_DEBUG=false
APP_TIMEZONE=UTC
APP_URL=https://your-app-name.onrender.com
APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
APP_MAINTENANCE_DRIVER=file
PHP_CLI_SERVER_WORKERS=4
BCRYPT_ROUNDS=12

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=error
LOG_STDERR_FORMATTER=Monolog\Formatter\JsonFormatter

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Option 1: SQLite (Simplest, good for small to medium apps)
DB_CONNECTION=sqlite
DB_DATABASE=/var/www/html/database/database.sqlite
# Note: For SQLite, you only need DB_CONNECTION and DB_DATABASE

# Option 2: Render PostgreSQL (Recommended for production)
# DB_CONNECTION=postgresql
# DB_HOST=your-postgres-host.onrender.com
# DB_PORT=5432
# DB_DATABASE=your_database_name
# DB_USERNAME=your_username
# DB_PASSWORD=your_password
# DB_URL=postgresql://your_username:your_password@your-postgres-host.onrender.com:5432/your_database_name

# Option 3: MySQL (if using external MySQL)
# DB_CONNECTION=mysql
# DB_HOST=your-mysql-host
# DB_PORT=3306
# DB_DATABASE=your_database_name
# DB_USERNAME=your_username
# DB_PASSWORD=your_password
# DB_URL=mysql://your_username:your_password@your-mysql-host:3306/your_database_name

# ===========================================
# SESSION & CACHE CONFIGURATION
# ===========================================
SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=true
SESSION_PATH=/
SESSION_DOMAIN=your-app-name.onrender.com
SESSION_SECURE_COOKIE=true
# For SQLite, use sqlite, for others use the same as DB_CONNECTION
SESSION_CONNECTION=sqlite
SESSION_STORE=null

CACHE_STORE=database
CACHE_PREFIX=abumart_
CACHE_TTL=3600

# ===========================================
# QUEUE CONFIGURATION
# ===========================================
QUEUE_CONNECTION=database
QUEUE_FAILED_DRIVER=database-uuids

# ===========================================
# REDIS CONFIGURATION (Optional)
# ===========================================
# If you have Redis service in Render, uncomment and configure:
# REDIS_CLIENT=phpredis
# REDIS_HOST=your-redis-host.onrender.com
# REDIS_PASSWORD=your_redis_password
# REDIS_PORT=6379
# REDIS_URL=redis://:your_redis_password@your-redis-host.onrender.com:6379
# REDIS_USERNAME=default

# ===========================================
# MAIL CONFIGURATION
# ===========================================
MAIL_MAILER=smtp
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="noreply@abumart.com"
MAIL_FROM_NAME="${APP_NAME}"
MAIL_LOG_CHANNEL=mail

# Alternative mail services:
# Gmail: smtp.gmail.com:587
# Outlook: smtp-mail.outlook.com:587
# SendGrid: smtp.sendgrid.net:587
# Mailgun: smtp.mailgun.org:587

# ===========================================
# BROADCASTING CONFIGURATION
# ===========================================
BROADCAST_DRIVER=pusher
BROADCAST_CONNECTION=pusher

PUSHER_APP_ID=your_pusher_app_id
PUSHER_APP_KEY=your_pusher_app_key
PUSHER_APP_SECRET=your_pusher_app_secret
PUSHER_APP_CLUSTER=mt1
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_ENCRYPTED=true

# ===========================================
# FILE STORAGE CONFIGURATION
# ===========================================
FILESYSTEM_DISK=public
# For cloud storage, consider using:
# FILESYSTEM_DISK=s3
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret
# AWS_DEFAULT_REGION=us-east-1
# AWS_BUCKET=your_aws_bucket
# AWS_USE_PATH_STYLE_ENDPOINT=false

# ===========================================
# FLUTTERWAVE PAYMENT CONFIGURATION
# ===========================================
FLW_PUBLIC_KEY=FLWPUBK_TEST-7a26ecf9dc3fe3d5e3eaece49d0fd333-X
FLW_ENCRYPTION_KEY=FLWSECK_TEST9580fd150ba6
FLW_SECRET_KEY=FLWSECK_TEST-a4c6124e57e27b4ac910a982df6d9932-X

# ===========================================
# VITE FRONTEND CONFIGURATION
# ===========================================
VITE_APP_NAME="AbuMart"
VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# ===========================================
# SECURITY & PERFORMANCE
# ===========================================
# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=60
RATE_LIMIT_WINDOW=1

# Trusted proxies (for Render)
TRUSTED_PROXIES=*
TRUSTED_HOSTS=*.onrender.com

# ===========================================
# MONITORING & DEBUGGING
# ===========================================
# For production monitoring, consider:
# LOG_SLACK_WEBHOOK_URL=your_slack_webhook_url
# PAPERTRAIL_URL=your_papertrail_url
# PAPERTRAIL_PORT=your_papertrail_port

# ===========================================
# ADDITIONAL SERVICES
# ===========================================
# ABLY_KEY=your_ably_key
# POSTMARK_TOKEN=your_postmark_token
# RESEND_KEY=your_resend_key
# SLACK_BOT_USER_OAUTH_TOKEN=your_slack_token
# SLACK_BOT_USER_DEFAULT_CHANNEL=general

# ===========================================
# IMPORTANT NOTES
# ===========================================
# 1. Replace all 'your-*' values with actual credentials
# 2. Never commit this file to version control
# 3. Use strong, unique passwords for production
# 4. Enable SSL/TLS for all external connections
# 5. Regularly rotate API keys and secrets
# 6. Monitor logs for security issues
# 7. Set up proper backup strategies
# 8. Configure monitoring and alerting
# 9. For SQLite: ensure database directory is writable
# 10. SQLite is good for small-medium apps, consider PostgreSQL for larger scale
